# Template for system libraries. We don't declare 
# headers rules because all of our headers are in
# the normal include path. If any were outside of
# that, we'd need to add them exported_headers
def add_system_libs(names = []):
	rules = []
	for name in names:
		prebuilt_cxx_library(
			name = name,
			lib_name = name,
			lib_dir = "/usr/lib/x86_64-linux-gnu"
		)
		rules.append(":" + name)

	return rules

system_libs = [
	"double-conversion",
	"glog",
	"gflags",
	"unwind",
	"lzma",
	"boost_regex",
]

# Using macros, we can reduce boiler plate
# For many libraries, it's easier to include
# the specific version of the library that
# you're using in a third-party directory
# (like third-party/googletest in this project)
dep_rules = add_system_libs(system_libs)

# Some of the local libaries that folly depends
# on have required linker flags. Make sure to set
# them for anything that requires folly
prebuilt_cxx_library(
	name = "folly",
	lib_name = "folly",
	lib_dir = "/usr/local/lib",
	deps = dep_rules,
	exported_linker_flags = [
		"-pthread",
		"-lstdc++",
	],
)

cxx_library(
	name = "GithubStatus",
	srcs = [
		"GithubStatus.cpp",
	],
	headers = [
		"GithubStatus.h",
	],
	deps = [
		":folly",
	],
)

cxx_binary(
	name = "HelloWorld",
	srcs = [
		"main.cpp",
	],
	deps = [
		":GithubStatus",
	],
)

cxx_test(
	name = "GithubStatusTest",
	srcs = [
		"GithubStatusTest.cpp",
	],
	deps = [
		":GithubStatus",
	],
)
